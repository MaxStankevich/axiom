{"version":3,"sources":["config/authSlice.js","hooks/useAuth.js","pages/admin/components/header/Header.js","components/status-tag/StatusTag.js","utils/request.js","utils/user.js","components/delete-action/DeleteAction.js","pages/admin/components/orders/list/List.js","utils/order.js","pages/admin/components/orders/Orders.js","constants.js","pages/admin/components/users/Users.js","components/user-form/UserForm.js","pages/admin/components/profile/Profile.js","components/spinner/Spinner.js","pages/admin/components/users/edit/Edit.js","pages/admin/components/users/create/Create.js","config/formLayout.js","pages/admin/components/orders/form/components/products/Products.js","pages/admin/components/orders/form/components/customer-fields/CustomerFields.js","pages/admin/components/orders/form/components/order-fields/OrderFields.js","pages/admin/components/orders/form/Form.js","pages/admin/components/orders/create/Create.js","pages/admin/components/orders/edit/Edit.js","pages/admin/components/orders/show/Show.js","pages/admin/components/customers/Customers.js","pages/admin/components/customers/show/Show.js","pages/admin/components/customers/form/Form.js","pages/admin/components/customers/edit/Edit.js","pages/admin/components/customers/create/Create.js","pages/admin/components/products/Products.js","pages/admin/components/products/form/Form.js","pages/admin/components/products/create/Create.js","pages/admin/components/products/edit/Edit.js","pages/admin/Admin.js","pages/login/Login.js","pages/order-form/OrderForm.js","App.js","config/store.js","reportWebVitals.js","index.js"],"names":["authSlice","createSlice","name","initialState","user","reducers","setUser","state","action","payload","actions","selectUser","auth","useAuth","dispatch","useDispatch","userFromRedux","useSelector","useMemo","JSON","parse","localStorage","getItem","isAdmin","role","updateUser","useCallback","data","newUser","setItem","stringify","Header","Layout","AdminHeader","history","useHistory","className","type","icon","LogoutOutlined","onClick","removeItem","push","COLORS","1","2","3","4","5","6","7","StatusTag","id","color","request","axios","create","baseURL","interceptors","use","config","token","headers","error","Promise","reject","response","status","notification","message","DeleteAction","onSuccess","url","successMessage","errorMessage","useState","deleteConfirmVisible","setDeleteConfirmVisible","deleteConfirmLoading","setDeleteConfirmLoading","title","placement","visible","onConfirm","delete","then","success","catch","err","console","finally","okText","cancelText","okButtonProps","loading","danger","onCancel","size","OrdersList","orders","showCustomer","fetchOrders","columns","dataIndex","render","createdAt","moment","format","customer","to","organizationName","products","length","map","product","order_product","quantity","fullName","username","key","text","record","ghost","orderStatusId","userId","put","dataSource","rowKey","pagination","setOrdersParams","Orders","setLoading","setOrder","value","page","filter","order","getOrdersParams","params","setParams","statuses","setStatuses","statusesLoading","setStatusesLoading","users","setUsers","usersLoading","setUsersLoading","updateParams","prevParams","updateFilter","get","res","useEffect","interval","setInterval","clearInterval","style","width","allowClear","onChange","defaultValue","Option","placeholder","total","totalItems","current","defaultPageSize","USER_ROLES","admin","manager","Users","fetchUsers","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","UserForm","Form","useForm","form","showPasswordFields","setShowPasswordFields","isEdit","onFinish","values","userData","email","password","roleId","Number","post","initialValues","String","scrollToFirstError","Item","label","QuestionCircleOutlined","rules","required","whitespace","val","hasFeedback","Password","autoComplete","dependencies","getFieldValue","validator","rule","resolve","htmlType","Profile","Spinner","props","EditUser","useParams","log","CreateUser","OrderForm","setProducts","productsLoading","setProductsLoading","List","fields","add","remove","field","gutter","align","noStyle","shouldUpdate","selectedIds","fieldKey","disabled","item","includes","min","DeleteTwoTone","PlusOutlined","CustomerFields","normalize","replace","toUpperCase","len","OrderFields","validatePhone","addonBefore","customers","setCustomers","customersLoading","setCustomersLoading","customerRadio","setCustomerRadio","fetchCustomers","searchTerm","search","resetFields","initialProducts","layout","errors","productsIds","pr","deletedProducts","reduce","result","_destroy","concat","join","deliveryMethodId","deliveryAddress","contactNumber","contactName","contactSurname","contactPatronymic","notes","maxWidth","margin","marginBottom","TextArea","setFieldsValue","Group","e","target","showSearch","notFoundContent","onSearch","debounce","filterOption","address","CreateOrder","EditOrder","fetchOrder","warning","duration","ShowOrder","bordered","extra","deliveryMethod","orderStatus","bankName","bankAccountNumber","payerAccountNumber","orderStatusHistories","statusName","Customers","ShowCustomer","setCustomer","fetchCustomer","CustomerForm","EditCustomer","CreateCustomer","Products","fetchProducts","ProductForm","description","CreateProduct","EditProduct","setProduct","Content","Sider","routes","path","component","Show","Create","Edit","Admin","location","useLocation","selectedMenuItem","pathname","match","breakpoint","collapsedWidth","theme","mode","selectedKeys","MailOutlined","TeamOutlined","IdcardFilled","DatabaseOutlined","UserOutlined","padding","route","exact","Login","remember","accessToken","prefix","LockOutlined","setSuccess","paddingBottom","locale","App","userFromStorage","configureStore","reducer","authReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.a77ae0d7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const { setUser } = authSlice.actions;\n\nexport const selectUser = state => state.auth.user;\n\nexport default authSlice.reducer;\n","import { useCallback, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser, setUser } from \"../config/authSlice\";\n\nconst useAuth = () => {\n  const dispatch = useDispatch();\n  const userFromRedux = useSelector(selectUser);\n\n  const user = useMemo(() => {\n    return userFromRedux || JSON.parse(localStorage.getItem(\"user\")) || {}\n  }, [userFromRedux]);\n\n  const isAdmin = useMemo(() => {\n    return user && user.role && user.role.name === \"admin\"\n  }, [user]);\n\n  const updateUser = useCallback((data) => {\n    const newUser = { ...user, ...data };\n\n    dispatch(setUser(newUser));\n    localStorage.setItem(\"user\", JSON.stringify(newUser));\n  }, [user, dispatch])\n\n  return [user, updateUser, isAdmin];\n}\n\nexport default useAuth;","import React from 'react';\nimport { Layout, Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setUser } from \"../../../../config/authSlice\";\n\nconst { Header } = Layout;\n\nconst AdminHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch(setUser(null));\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/\");\n  }\n\n  return (\n    <Header className=\"site-layout-sub-header-background\">\n      <Button type=\"primary\"\n              icon={<LogoutOutlined/>} onClick={logout}>Выйти</Button>\n    </Header>\n  )\n}\n\nexport default AdminHeader;","import React from \"react\";\nimport { Tag } from 'antd';\n\nconst COLORS = {\n  1: \"orange\",\n  2: \"geekblue\",\n  3: \"blue\",\n  4: \"cyan\",\n  5: \"lime\",\n  6: \"purple\",\n  7: \"green\"\n}\n\nconst StatusTag = ({ id, name }) => (\n  <Tag color={COLORS[id]}>{name}</Tag>\n)\n\nexport default StatusTag","import axios from \"axios\";\nimport { notification } from \"antd\";\nimport { getUserToken } from \"./user\";\n\nconst request = axios.create({\n  // baseURL: \"http://localhost:5000/api/\",\n  baseURL: \"/api/\",\n});\n\nrequest.interceptors.request.use(function (config) {\n  const token = getUserToken();\n  if (token) {\n    config.headers[\"x-access-token\"] = token;\n  }\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\n\nrequest.interceptors.response.use(\n  response => {\n    return response;\n  },\n  function(error) {\n    // Do something with response error\n    if (error.response.status === 401) {\n      notification.error({ message: error.response.data.message || \"Ошибка авторизации!\" });\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nexport  default request;","export const getUserToken = () => localStorage.getItem(\"token\")","import React, { useState } from 'react';\nimport { Button, Popconfirm, notification } from 'antd';\nimport request from \"../../utils/request\";\n\nconst DeleteAction = ({ onSuccess = () => {}, url, successMessage, errorMessage }) => {\n  const [deleteConfirmVisible, setDeleteConfirmVisible] = useState(false);\n  const [deleteConfirmLoading, setDeleteConfirmLoading] = useState(false);\n\n  return (\n    <Popconfirm\n      title=\"Вы действительно хотите удалить?\"\n      placement=\"topRight\"\n      visible={deleteConfirmVisible}\n      onConfirm={() => {\n        setDeleteConfirmLoading(true);\n        request.delete(url).then(() => {\n          notification.success({ message: successMessage })\n          onSuccess();\n        }).catch(err => {\n          notification.error({ message: errorMessage });\n          console.error(err);\n        }).finally(() => {\n          setDeleteConfirmLoading(false);\n          setDeleteConfirmVisible(false);\n        })\n      }}\n      okText=\"Удалить\"\n      cancelText=\"Отмена\"\n      okButtonProps={{ loading: deleteConfirmLoading, danger: true }}\n      onCancel={() => {\n        setDeleteConfirmVisible(false);\n      }}\n    >\n      <Button\n        size=\"small\"\n        danger\n        onClick={() => {\n          setDeleteConfirmVisible(true);\n        }}\n      >Удалить</Button>\n    </Popconfirm>\n  )\n};\n\nexport default DeleteAction","import React, { Fragment } from 'react';\nimport { Table, Space, Button, notification } from 'antd';\nimport { Link, useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport StatusTag from \"../../../../../components/status-tag/StatusTag\";\nimport DeleteAction from \"../../../../../components/delete-action/DeleteAction\";\nimport request from \"../../../../../utils/request\";\nimport useAuth from \"../../../../../hooks/useAuth\";\n\n\nconst OrdersList = ({ orders, loading, showCustomer = true, fetchOrders }) => {\n  const [user] = useAuth();\n  const history = useHistory();\n\n  const takeOrder = (id) => {\n    request.put(`/orders/${id}`, { orderStatusId: 2, userId: user.id })\n      .then(() => {\n        notification.success({ message: \"Заказ успешно принят вами\" })\n        history.push(`/orders/${id}`)\n      })\n      .catch(() => {\n        notification.error({ message: \"Не удалось принять заказ\" })\n      })\n  }\n\n  const columns = [\n    {\n      title: 'Дата регистрации',\n      dataIndex: 'createdAt',\n      render: createdAt => (\n        moment(createdAt).format('D MMMM YYYY, HH:mm')\n      ),\n    },\n    ...(showCustomer ? [{\n      title: 'Заказчик',\n      dataIndex: \"customer\",\n      render: customer =>\n        <Link to={`/customers/${customer.id}`}>\n          {customer.organizationName}\n        </Link>\n    }] : []),\n    {\n      title: 'Предмет заказа',\n      dataIndex: \"products\",\n      render: products => (\n        products && !!products.length && products.map(product => (\n          <Fragment key={product.id}>\n            {product.name} ({product.order_product.quantity} шт)\n            <br/>\n          </Fragment>\n        ))\n      ),\n    },\n    {\n      title: 'Статус',\n      dataIndex: \"orderStatus\",\n      render: status => (\n        <StatusTag id={status.id} name={status.name}/>\n      ),\n    },\n    {\n      title: 'Ответственный',\n      dataIndex: \"user\",\n      render: user => (\n        user && `${user.fullName || \"\"}, ${user.username}`\n      ),\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <DeleteAction\n            url={`/orders/${record.id}`}\n            onSuccess={fetchOrders}\n            successMessage=\"Заказ был успешно удалён\"\n            errorMessage=\"Не удалось удалить заказ\"\n          />\n          <Link to={`/orders/${record.id}/edit`}><Button\n            type=\"primary\" ghost\n            size=\"small\">Редактировать</Button></Link>\n          <Link to={`/orders/${record.id}`}><Button\n            size=\"small\">Детали</Button></Link>\n          {record.orderStatusId === 1 && !record.userId &&\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              takeOrder(record.id);\n            }}\n          >\n            Принять\n          </Button>\n          }\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <Table columns={columns} dataSource={orders} rowKey=\"id\" loading={loading} pagination={false}/>\n  )\n}\n\n\nexport default OrdersList","export const getOrdersParams = () => {\n  const value = localStorage.getItem(\"ordersParams\");\n  return value ? JSON.parse(value) : { page: 1, size: 10, filter: {}, order: '[[\"createdAt\", \"DESC\"]]' };\n}\n\nexport const setOrdersParams = (data) => {\n  localStorage.setItem(\"ordersParams\", JSON.stringify(data))\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, notification, Pagination, Select } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport OrdersList from \"./list/List\";\nimport request from \"../../../../utils/request\";\nimport { getOrdersParams, setOrdersParams } from \"../../../../utils/order\";\n\nconst Orders = () => {\n  const [loading, setLoading] = useState(false);\n  const [orders, setOrder] = useState([]);\n  const [params, setParams] = useState(getOrdersParams());\n\n  const [statuses, setStatuses] = useState([]);\n  const [statusesLoading, setStatusesLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n\n  const updateParams = (data) => {\n    setOrdersParams({ ...params, ...data });\n    setParams(prevParams => ({ ...prevParams, ...data }));\n  }\n\n  const updateFilter = (data) => {\n    setOrdersParams({ ...params, page: 1, size: 10, filter: { ...params.filter, ...data } });\n    setParams(prevParams => ({ ...prevParams, page: 1, size: 10, filter: { ...prevParams.filter, ...data } }));\n  }\n\n  const fetchOrders = useCallback(() => {\n    setLoading(true);\n    request.get(\"/orders\", { params }).then(res => {\n      setOrder(res.data);\n    }).catch(() => {\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setOrder, params])\n\n  useEffect(() => {\n    fetchOrders();\n  }, [fetchOrders])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchOrders();\n    }, 5000);\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [fetchOrders])\n\n  useEffect(() => {\n    setStatusesLoading(true);\n    request.get(\"/order_statuses\").then(res => {\n      setStatuses(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить статусы\" })\n    }).finally(() => {\n      setStatusesLoading(false);\n    })\n\n    setUsersLoading(true);\n    request.get(\"/users\").then(res => {\n      setUsers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить юзеров\" })\n    }).finally(() => {\n      setUsersLoading(false);\n    })\n  }, [])\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/orders/new\">\n          <Button className=\"green-button\" type=\"primary\">Создать</Button>\n        </Link>\n      </div>\n      <div className=\"table-filters\">\n        Сортировать:\n        <Select\n          style={{ width: 300 }}\n          allowClear\n          loading={usersLoading}\n          value={params.order}\n          onChange={value => updateParams({ order: value })}\n          defaultValue={'[[\"createdAt\", \"DESC\"]]'}\n        >\n          <Select.Option value={'[[\"createdAt\", \"DESC\"]]'}>по дате (сначала новые)</Select.Option>\n          <Select.Option value={'[[\"createdAt\", \"ASC\"]]'}>по дате (сначала старые)</Select.Option>\n        </Select>{\" \"}\n        <Select\n          placeholder=\"Статус\"\n          style={{ width: 300 }}\n          allowClear\n          loading={statusesLoading}\n          value={params.filter.orderStatusId}\n          onChange={value => updateFilter({ orderStatusId: value })}\n        >\n          {statuses.map(status => (\n            <Select.Option key={status.id} value={status.id}>{status.name}</Select.Option>\n          ))}\n        </Select>{\" \"}\n        <Select\n          placeholder=\"Ответственный\"\n          style={{ width: 300 }}\n          allowClear\n          value={params.filter.userId}\n          loading={usersLoading}\n          onChange={value => updateFilter({ userId: value })}\n        >\n          {users.map(user => (\n            <Select.Option key={user.id} value={user.id}>{user.fullName}, {user.username}</Select.Option>\n          ))}\n          <Select.Option value={null}>Никто</Select.Option>\n        </Select>{\" \"}\n        <Button\n          onClick={() => {\n            updateParams({ page: 1, size: 10, filter: {}, order: '[[\"createdAt\", \"DESC\"]]' });\n          }}\n        >Сбросить фильтры</Button>\n      </div>\n      <OrdersList orders={orders.data} loading={loading} fetchOrders={fetchOrders}/>\n      <div className=\"pagination\">\n        <Pagination\n          total={orders.totalItems}\n          current={params.page}\n          defaultPageSize={params.size}\n          onChange={page => {\n            updateParams({ page });\n          }}\n        />\n      </div>\n    </>\n  )\n}\n\n\nexport default Orders","export const USER_ROLES = {\n  admin: \"Администратор\",\n  manager: \"Менеджер\"\n}","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table, Tag, Space, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport request from \"../../../../utils/request\";\nimport { selectUser } from \"../../../../config/authSlice\";\nimport \"./Users.css\";\nimport { USER_ROLES } from \"../../../../constants\";\nimport DeleteAction from \"../../../../components/delete-action/DeleteAction\";\n\nconst Users = () => {\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const user = useSelector(selectUser);\n\n  const fetchUsers = useCallback(() => {\n    setLoading(true);\n    request.get(\"/users\").then(res => {\n      setUsers(res.data);\n    }).catch(err => {\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setUsers])\n\n  const columns = useMemo(() => [\n    {\n      title: 'Имя пользователя',\n      dataIndex: 'username',\n      key: 'username',\n    },\n    {\n      title: 'ФИО',\n      dataIndex: 'fullName',\n      key: 'fullName',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Роль',\n      dataIndex: ['role', 'name'],\n      key: 'role',\n      render: role => (\n        <Tag color={role === \"admin\" ? 'geekblue' : 'green'}>\n          {USER_ROLES[role]}\n        </Tag>\n      ),\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Link to={record.id === user.id ? \"/profile\" : `/users/${record.id}`}><Button\n            size=\"small\">Редактировать</Button></Link>\n          {record.id !== user.id &&\n            <DeleteAction\n              url={`/users/${record.id}`}\n              onSuccess={fetchUsers}\n              successMessage={`Пользователь ${record.username} был успешно удалён`}\n              errorMessage={\"Не удалось удалить пользователя\"}\n            />\n          }\n        </Space>\n      ),\n    },\n  ], [user, fetchUsers]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers])\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/users/new\">\n          <Button className=\"green-button\" type=\"primary\">Добавить</Button>\n        </Link>\n      </div>\n      <Table columns={columns} dataSource={users} rowKey=\"id\" loading={loading} pagination={false} />\n    </>\n  )\n};\n\nexport default Users","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Select,\n  Button,\n  notification\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport request from \"../../utils/request\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst UserForm = ({ user = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [, , isAdmin] = useAuth();\n  const [loading, setLoading] = useState(false);\n\n  const [showPasswordFields, setShowPasswordFields] = useState(false);\n\n  const isEdit = !!(user.id);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    const userData = {\n      username: values.username,\n      email: values.email,\n      fullName: values.fullName,\n    };\n\n    if (isEdit && showPasswordFields) {\n      userData.password = values.password\n    }\n\n    if (values.roleId) {\n      userData.roleId = Number(values.roleId);\n    }\n\n    (isEdit ? request.put(`/users/${user.id}`, userData) : request.post(\"/auth/signup\", {\n      ...userData,\n      password: values.password\n    }))\n      .then(\n        (response) => {\n          notification.success({\n            message: isEdit ?\n              `Данные пользователя ${response.data.username} были успешно обновлены` :\n              `Регистрация пользователя ${response.data.username} прошла успешно`\n          })\n          if (onSuccess) {\n            onSuccess(response.data);\n          }\n        },\n        () => {\n          notification.error({ message: \"Не удалось обновить данные пользователя\" });\n        }\n      ).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"user\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          ...user,\n          roleId: String(user.role.id)\n        } : { roleId: \"2\" }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"username\"\n          label={\n            <span>\n            Логин&nbsp;\n              <Tooltip title=\"Логин необходимый для входа\">\n              <QuestionCircleOutlined/>\n            </Tooltip>\n          </span>\n          }\n          rules={[\n            {\n              required: true,\n              message: 'Введите логин',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: 'email',\n              message: 'Неправильный E-mail',\n            },\n            {\n              required: true,\n              message: 'Ведите E-mail',\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"fullName\"\n          label=\"ФИО\"\n          rules={[\n            {\n              required: true,\n              message: 'Введите ФИО',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        {isAdmin &&\n        <Form.Item\n          name=\"roleId\"\n          label=\"Роль\"\n          rules={[\n            {\n              required: true,\n              message: 'Выберите роль!',\n            },\n          ]}\n        >\n          <Select>\n            <Option value=\"1\">Администратор</Option>\n            <Option value=\"2\">Менеджер</Option>\n          </Select>\n        </Form.Item>\n        }\n        {isEdit &&\n        <Form.Item {...tailFormItemLayout}>\n          <Button onClick={() => {\n            setShowPasswordFields(val => !val)\n          }}>\n            {showPasswordFields ? \"Отмена\" : \"Сменить пароль\"}\n          </Button>\n        </Form.Item>\n        }\n        {(!isEdit || showPasswordFields) &&\n        <>\n          <Form.Item\n            name=\"password\"\n            label=\"Пароль\"\n            rules={[\n              {\n                required: true,\n                message: 'Введите пароль',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password autoComplete=\"new-password\"/>\n          </Form.Item>\n          <Form.Item\n            name=\"confirm\"\n            label=\"Подтверждение пароля\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Подтвердите пароль',\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject('Пароль должен совпадать');\n                },\n              }),\n            ]}\n          >\n            <Input.Password/>\n          </Form.Item>\n        </>\n        }\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default UserForm;","import React from \"react\";\nimport UserForm from \"../../../../components/user-form/UserForm\";\nimport useAuth from \"../../../../hooks/useAuth\";\n\nconst Profile = () => {\n  const [user, updateUser] = useAuth();\n\n  return (\n    <UserForm\n      user={user}\n      onSuccess={res => {\n        updateUser(res);\n      }}\n    />\n  )\n}\n\nexport default Profile;","import React from \"react\";\nimport { Spin } from 'antd';\nimport './Spinner.css';\n\nconst Spinner = (props) => (\n  <div className=\"spinner\">\n    <Spin {...props} />\n  </div>\n)\n\nexport default Spinner","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport UserForm from \"../../../../../components/user-form/UserForm\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\n\nconst EditUser = () => {\n  const [user, setUser] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    request.get(`/users/${id}`).then(res => {\n      setUser(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [setUser, id])\n\n  return (\n    user ?\n      <UserForm\n        user={user}\n        onSuccess={() => {\n          history.push(\"/users\");\n        }}\n      /> : <Spinner size=\"large\" />\n  )\n}\n\nexport default EditUser;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserForm from \"../../../../../components/user-form/UserForm\";\n\nconst CreateUser = () => {\n  const history = useHistory();\n\n  return (\n    <UserForm\n      onSuccess={() => {\n        history.push(\"/users\");\n      }}\n    />\n  )\n}\n\nexport default CreateUser;","export const formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n};\nexport const tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Form,\n  Select,\n  Button,\n  Row,\n  Col,\n  InputNumber,\n  notification\n} from 'antd';\nimport { PlusOutlined, DeleteTwoTone } from '@ant-design/icons';\nimport request from \"../../../../../../../utils/request\";\nimport { tailFormItemLayout } from \"../../../../../../../config/formLayout\";\n\nconst { Option } = Select;\n\nconst OrderForm = ({ form }) => {\n  const [products, setProducts] = useState([]);\n  const [productsLoading, setProductsLoading] = useState(false);\n\n  useEffect(() => {\n    setProductsLoading(true);\n    request.get(\"/products\").then(res => {\n      setProducts(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить заказчиков\" })\n    }).finally(() => {\n      setProductsLoading(false);\n    })\n  }, [setProducts, setProductsLoading])\n\n  return (\n    <Form.List name=\"products\">\n      {(fields, { add, remove }) => {\n        return (\n          <>\n            {fields.map(field => (\n              <Row gutter={24} align=\"middle\" key={field.key}>\n                <Col xs={16}>\n                  <Form.Item\n                    noStyle\n                    shouldUpdate\n                  >\n                    {() => {\n                      const values = form.getFieldValue(\"products\") || [];\n                      const selectedIds = values.filter(val => val && val.id).map(val => val.id);\n                      return (\n                        <Form.Item\n                          {...field}\n                          label=\"Товар\"\n                          name={[field.name, 'id']}\n                          fieldKey={[field.fieldKey, 'id']}\n                          rules={[{ required: true, message: 'Выберите товар' }]}\n                        >\n                          <Select disabled={productsLoading}>\n                            {products.map(item => (\n                              <Option disabled={selectedIds.includes(item.id)} key={item.id} value={item.id}>\n                                {item.name}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      )\n                    }}\n                  </Form.Item>\n                </Col>\n                <Col xs={5}>\n                  <Form.Item\n                    {...field}\n                    label=\"Количество\"\n                    name={[field.name, 'quantity']}\n                    fieldKey={[field.fieldKey, 'quantity']}\n                    rules={[\n                      {\n                        required: true, message: 'Введите количество',\n                        type: 'number',\n                        min: 1,\n                      },\n                    ]}\n                  >\n                    <InputNumber/>\n                  </Form.Item>\n                </Col>\n                <Col xs={1}>\n                  <DeleteTwoTone onClick={() => remove(field.name)}/>\n                </Col>\n              </Row>\n            ))}\n\n            {fields.length < products.length &&\n            <Form.Item {...tailFormItemLayout}>\n              <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined/>}>\n                Добавить товар\n              </Button>\n            </Form.Item>\n            }\n          </>\n        )\n      }}\n    </Form.List>\n  );\n};\n\nexport default OrderForm;","import React from 'react';\nimport {\n  Form,\n  Input,\n  Tooltip,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n\nconst CustomerFields = () => {\n  return (\n    <>\n      <Form.Item\n        name={[\"customer\", \"email\"]}\n        label=\"Email\"\n        rules={[\n          {\n            type: 'email',\n            message: 'Неправильный E-mail',\n          },\n          {\n            required: true,\n            message: 'Ведите E-mail',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"organizationName\"]}\n        label=\"Название организации\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите название организации',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"address\"]}\n        label=\"Юридический адрес\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите юридический адрес',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"bankAccountNumber\"]}\n        label={\n          <span>\n            Номер банковского счёта (IBAN)&nbsp;\n            <Tooltip title=\"Должен состоять только из 28 заглавных букв латинского алфавита и цифр\">\n              <QuestionCircleOutlined/>\n            </Tooltip>\n          </span>\n        }\n        normalize={(val) => {\n          return val.replace(/[^a-zA-Z0-9]/g, \"\").toUpperCase();\n        }}\n        rules={[\n          {\n            required: true,\n            message: 'Должно быть 28 символов',\n            whitespace: true,\n            len: 28\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"bankName\"]}\n        label=\"Название банка\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите название банка',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item\n        name={[\"customer\", \"payerAccountNumber\"]}\n        label=\"УНП\"\n        rules={[\n          {\n            required: true,\n            message: 'Ведите УНП (9 цифр)',\n            whitespace: true,\n            len: 9\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default CustomerFields;","import React from 'react';\nimport {\n  Form,\n  Input,\n  Select,\n} from 'antd';\n\nconst OrderFields = ({ form, validatePhone }) => {\n  return (\n    <>\n      <Form.Item\n        name=\"deliveryMethodId\"\n        label=\"Способ доставки\"\n        rules={[\n          {\n            required: true,\n            message: 'Укажите способ доставки',\n          },\n        ]}\n      >\n        <Select>\n          <Select.Option value={1}>Самовывоз</Select.Option>\n          <Select.Option value={2}>Курьер (Autolight Express)</Select.Option>\n        </Select>\n      </Form.Item>\n      <Form.Item shouldUpdate noStyle>\n        {() => {\n          return form.getFieldValue(\"deliveryMethodId\") === 1 ? null :\n            <Form.Item\n              name=\"deliveryAddress\"\n              label=\"Адрес доставки\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Введите адрес',\n                  whitespace: true,\n                },\n              ]}\n            >\n              <Input/>\n            </Form.Item>\n        }}\n      </Form.Item>\n      <Form.Item\n        name=\"contactNumber\"\n        label=\"Контактный номер\"\n        rules={[\n          {\n            required: true,\n            message: 'Номер должен состоять из 9 цифр',\n            ...(validatePhone ? { len: 9 } : {})\n          },\n        ]}\n      >\n        <Input\n          addonBefore=\"+375\"\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"contactName\"\n        label=\"Имя\"\n        rules={[\n          {\n            required: true,\n            message: 'Укажите имя',\n          },\n        ]}\n      >\n        <Input/>\n      </Form.Item>\n      <Form.Item shouldUpdate noStyle>\n        {() => {\n          return form.getFieldValue(\"deliveryMethodId\") === 1 ? null :\n            <>\n              <Form.Item\n                name=\"contactSurname\"\n                label=\"Фамилия\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Введите фамилию',\n                    whitespace: true,\n                  },\n                ]}\n              >\n                <Input/>\n              </Form.Item>\n              <Form.Item\n                name=\"contactPatronymic\"\n                label=\"Отчество\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Введите отчество',\n                    whitespace: true,\n                  },\n                ]}\n              >\n                <Input/>\n              </Form.Item>\n            </>\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default OrderFields;","import React, { useState, useEffect } from 'react';\nimport {\n  Form,\n  Select,\n  Button,\n  Radio,\n  Row,\n  Col,\n  notification,\n  Input,\n  Spin\n} from 'antd';\nimport { debounce } from \"throttle-debounce\";\nimport request from \"../../../../../utils/request\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../../../../hooks/useAuth\";\nimport Products from \"./components/products/Products\";\nimport CustomerFields from \"./components/customer-fields/CustomerFields\";\nimport OrderFields from \"./components/order-fields/OrderFields\";\n\nconst { Option } = Select;\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst OrderForm = ({ order = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [customers, setCustomers] = useState({ data: [] });\n  const [customersLoading, setCustomersLoading] = useState(false);\n  const [statuses, setStatuses] = useState([]);\n  const [statusesLoading, setStatusesLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [customerRadio, setCustomerRadio] = useState(1);\n  const isEdit = !!(order.id);\n  const [user] = useAuth();\n\n  const fetchCustomers = (searchTerm = \"\") => {\n    setCustomersLoading(true);\n    request.get(\"/customers\", { params: { page: 1, size: 10, search: searchTerm } }).then(res => {\n      setCustomers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить заказчиков\" })\n    }).finally(() => {\n      setCustomersLoading(false);\n    })\n  }\n\n  useEffect(() => {\n    if (isEdit) {\n      form.resetFields()\n    }\n  }, [form, isEdit, order])\n\n  useEffect(() => {\n    fetchCustomers();\n\n    setStatusesLoading(true);\n    request.get(\"/order_statuses\").then(res => {\n      setStatuses(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить статусы\" })\n    }).finally(() => {\n      setStatusesLoading(false);\n    })\n\n    setUsersLoading(true);\n    request.get(\"/users\").then(res => {\n      setUsers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить юзеров\" })\n    }).finally(() => {\n      setUsersLoading(false);\n    })\n  }, [setCustomers, setCustomersLoading])\n\n  const onCustomerRadioChange = e => {\n    setCustomerRadio(e.target.value);\n  };\n\n  const initialProducts = (order.products || []).map(product => ({\n    id: product.id,\n    quantity: product.order_product.quantity\n  }));\n\n  const onFinish = (values) => {\n    const errors = [];\n\n    if (isEdit) {\n      const productsIds = values.products.map(pr => pr.id);\n      const deletedProducts = initialProducts.reduce((result, product) => {\n        if (!productsIds.includes(product.id)) {\n          result.push({ ...product, _destroy: true });\n        }\n        return result\n      }, []);\n      values.products = values.products.concat(deletedProducts);\n    }\n\n    if (!isEdit && (!values.products || !values.products.length)) {\n      errors.push(\"Не выбраны товары\")\n    }\n\n    if (errors.length) {\n      notification.error({ message: errors.join(\". \") })\n    } else {\n      setLoading(true);\n\n      (isEdit ? request.put(`/orders/${order.id}`, values) : request.post(\"/orders\", values))\n        .then(\n          (response) => {\n            notification.success({\n              message: isEdit ?\n                \"Изменения сохранены\" :\n                \"Заказ добавлен\"\n            })\n            if (onSuccess) {\n              onSuccess(response.data);\n            }\n          },\n          () => {\n            notification.error({ message: \"Не удалось сохранить данные заказа\" });\n          }\n        ).finally(() => {\n        setLoading(false);\n      })\n    }\n  };\n\n  return (\n    <>\n      {isEdit && <div className=\"table-controls\"><Link to={`/orders/${order.id}`}><Button\n        type=\"primary\">Просмотр</Button></Link></div>}\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"order\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          deliveryMethodId: order.deliveryMethodId,\n          deliveryAddress: order.deliveryAddress,\n          contactNumber: order.contactNumber,\n          contactName: order.contactName,\n          contactSurname: order.contactSurname,\n          contactPatronymic: order.contactPatronymic,\n          notes: order.notes,\n          orderStatusId: order.orderStatusId,\n          userId: order.userId,\n          products: initialProducts\n        } : {\n          deliveryMethodId: 1,\n          orderStatusId: 1,\n          products: [{ id: null, quantity: 1 }]\n        }}\n        scrollToFirstError\n        style={{ maxWidth: 750, margin: \"0 auto\" }}\n      >\n        <Products form={form}/>\n        <div style={{ marginBottom: \"50px\" }}>\n          <OrderFields form={form}/>\n          <Form.Item\n            name=\"notes\"\n            label=\"Дополнительные условия и пожелания\"\n          >\n            <Input.TextArea/>\n          </Form.Item>\n          <Form.Item\n            name=\"orderStatusId\"\n            label=\"Статус\"\n            rules={[\n              {\n                required: true,\n                message: 'Укажите статус'\n              },\n            ]}\n          >\n            <Select loading={statusesLoading}>\n              {statuses.map(status =>\n                <Option\n                  key={status.id}\n                  value={status.id}>{status.name}\n                </Option>)}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            shouldUpdate\n            label=\"Ответственный\"\n          >\n            {() => (\n              <Row gutter={24}>\n                <Col span={18}>\n                  <Form.Item\n                    name=\"userId\"\n                    noStyle\n                  >\n                    <Select loading={usersLoading}>\n                      {users.map(user =>\n                        <Option\n                          key={user.id}\n                          value={user.id}>{`${user.fullName || \"\"} ${user.email}, ${user.username}`}\n                        </Option>)}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                {form.getFieldValue(\"userId\") === user.id ? null :\n                  <Col span={6}>\n                    <Button type=\"primary\" onClick={() => {\n                      form.setFieldsValue({ userId: user.id })\n                    }}>\n                      Назначить меня\n                    </Button>\n                  </Col>\n                }\n              </Row>\n            )}\n          </Form.Item>\n        </div>\n        {isEdit ? null :\n          <>\n            <Form.Item label=\"Заказчик\">\n              <Radio.Group onChange={onCustomerRadioChange} value={customerRadio}>\n                <Radio value={1}>Добавить нового заказчика</Radio>\n                <Radio value={2}>Выбрать существующего</Radio>\n              </Radio.Group>\n            </Form.Item>\n            {customerRadio === 1 ?\n              <CustomerFields/>\n              :\n              <Form.Item\n                name=\"customerId\"\n                label=\"Выберите\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Выберите заказчика'\n                  },\n                ]}\n              >\n                <Select\n                  showSearch\n                  loading={customersLoading}\n                  notFoundContent={customersLoading ? <Spin size=\"small\"/> : null}\n                  placeholder=\"Поиск\"\n                  onSearch={debounce(500, fetchCustomers)}\n                  filterOption={false}\n                >\n                  {customers.data.map(customer =>\n                    <Option\n                      key={customer.id}\n                      value={customer.id}>{`${customer.organizationName}, ${customer.address}, ${customer.email}`}\n                    </Option>)}\n                </Select>\n              </Form.Item>\n            }\n          </>\n        }\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default OrderForm;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport OrderForm from \"../form/Form\";\n\nconst CreateOrder = () => {\n  const history = useHistory();\n\n  return (\n    <OrderForm onSuccess={({ id }) => {\n      history.push(`/orders/${id}`);\n    }} />\n  )\n}\n\nexport default CreateOrder;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport OrderForm from \"../form/Form\";\nimport { notification } from \"antd\";\n\nconst EditOrder = () => {\n  const [order, setOrder] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const fetchOrder = () => {\n    request.get(`/orders/${id}`).then(res => {\n      if (order && JSON.stringify(order) !== JSON.stringify(res.data)) {\n        notification.warning({ message: \"Внимание! Этот заказ был изменён другим пользователем. Проверьте актуальность данных.\", duration: 0 })\n        setOrder(res.data);\n      }\n      if (!order) {\n        setOrder(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n\n  useEffect(() => {\n    fetchOrder();\n  }, [id])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchOrder();\n    }, 5000);\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [id, order])\n\n  return (\n    order ?\n      <OrderForm\n        order={order}\n        onSuccess={({ id }) => {\n          history.push(`/orders/${id}`);\n        }}\n      /> : <Spinner size=\"large\"/>\n  )\n}\n\nexport default EditOrder;","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Descriptions, Button, notification } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport StatusTag from \"../../../../../components/status-tag/StatusTag\";\n\nconst ShowOrder = () => {\n  const [order, setOrder] = useState();\n  const { id } = useParams();\n\n  const fetchOrder = () => {\n    request.get(`/orders/${id}`).then(res => {\n      if (order && JSON.stringify(order) !== JSON.stringify(res.data)) {\n        notification.warning({\n          message: \"Внимание! Этот заказ был изменён другим пользователем. Проверьте актуальность данных.\",\n          duration: 0\n        })\n        setOrder(res.data);\n      }\n      if (!order) {\n        setOrder(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n\n  useEffect(() => {\n    fetchOrder();\n  }, [id])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchOrder();\n    }, 5000);\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [id, order])\n\n  return (\n    order ?\n      <Descriptions\n        bordered\n        title=\"Информация о заказе\"\n        extra={\n          <Link to={`/orders/${id}/edit`}><Button\n            type=\"primary\">Редактировать</Button></Link>}\n      >\n        <Descriptions.Item label=\"Предмет заказа\">{(order.products || []).map(product => (\n          <Fragment key={product.id}>\n            {product.name} ({product.order_product.quantity} шт)\n            <br/>\n          </Fragment>\n        ))}</Descriptions.Item>\n        <Descriptions.Item label=\"Создан\">{moment(order.createdAt).format('D MMMM YYYY, HH:mm')}</Descriptions.Item>\n        <Descriptions.Item\n          label=\"Контактное лицо\">{order.contactSurname} {order.contactName} {order.contactPatronymic} {`+375${order.contactNumber}`}</Descriptions.Item>\n        <Descriptions.Item label=\"Способ доставки\">{order.deliveryMethod.name}</Descriptions.Item>\n        {order.deliveryAddress && <Descriptions.Item label=\"Адрес доставки\">{order.deliveryAddress}</Descriptions.Item>}\n        {order.notes && <Descriptions.Item label=\"Доп. комментарии\">{order.notes}</Descriptions.Item>}\n        <Descriptions.Item label=\"Статус\"><StatusTag {...order.orderStatus} /></Descriptions.Item>\n        <Descriptions.Item label=\"Ответственный\">\n          {order.user ?\n            <>\n              {order.user.fullName &&\n              <>\n                {order.user.fullName}\n                <br/>\n              </>\n              }\n              {order.user.username}\n              <br/>\n              {order.user.email}\n              <br/>\n            </> :\n            \"Не назначен\"\n          }\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Заказчик\">\n          <Link to={`/customers/${order.customer.id}`}>\n            {order.customer.organizationName}\n            <br/>\n            {order.customer.email}\n            <br/>\n            {order.customer.address}\n            <br/>\n            {order.customer.bankName} ({order.customer.bankAccountNumber})\n            <br/>\n            УНП: {order.customer.payerAccountNumber}\n          </Link>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"История\">\n          {order.orderStatusHistories.map(history => (\n            <Fragment key={history.id}>\n              <b>{history.statusName}:</b> {moment(history.createdAt).format('D MMMM YYYY, HH:mm')}\n              <br/>\n            </Fragment>\n          ))}\n        </Descriptions.Item>\n      </Descriptions> : <Spinner size=\"large\"/>\n  )\n}\n\nexport default ShowOrder;","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { Table, Space, Button, notification, Input, Pagination } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { debounce } from \"throttle-debounce\";\nimport request from \"../../../../utils/request\";\nimport DeleteAction from \"../../../../components/delete-action/DeleteAction\";\n\nconst Customers = () => {\n  const [loading, setLoading] = useState(false);\n  const [customers, setCustomers] = useState([]);\n  const [params, setParams] = useState({ page: 1, size: 10 });\n\n  const updateParams = (data) => {\n    setParams(prevParams => ({ ...prevParams, ...data }));\n  }\n\n  const fetchCustomers = useCallback(() => {\n    setLoading(true);\n    request.get(\"/customers\", { params }).then(res => {\n      setCustomers(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить заказчиков\" })\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setCustomers, params])\n\n  const columns = useMemo(() => [\n    {\n      title: 'Название организации',\n      dataIndex: 'organizationName',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'Количество заказов',\n      dataIndex: [\"orders\", \"length\"],\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <DeleteAction\n            url={`/customers/${record.id}`}\n            onSuccess={fetchCustomers}\n            successMessage=\"Заказчик был успешно удалён\"\n            errorMessage=\"Не удалось удалить заказчика\"\n          />\n          <Link to={`/customers/${record.id}/edit`}><Button\n            size=\"small\">Редактировать</Button></Link>\n          <Link to={`/customers/${record.id}`}><Button\n            size=\"small\">Детали</Button></Link>\n        </Space>\n      ),\n    },\n  ], [fetchCustomers]);\n\n  useEffect(() => {\n    fetchCustomers();\n  }, [fetchCustomers])\n\n  const search = debounce(500, function (e) {\n    updateParams({ search: e.target.value, page: 1, size: 10 })\n  })\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/customers/new\">\n          <Button className=\"green-button\" type=\"primary\">Добавить</Button>\n        </Link>\n      </div>\n      <div className=\"table-filters\">\n        <Input\n          style={{ width: 300 }}\n          onChange={search}\n          placeholder=\"Поиск\"\n        />\n      </div>\n      <Table columns={columns} dataSource={customers.data} rowKey=\"id\" loading={loading} pagination={false}/>\n      <div className=\"pagination\">\n        <Pagination\n          total={customers.totalItems}\n          current={params.page}\n          defaultPageSize={params.size}\n          onChange={page => {\n            updateParams({ page });\n          }}\n        />\n      </div>\n    </>\n  )\n};\n\nexport default Customers","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Descriptions, Button } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport OrdersList from \"../../orders/list/List\";\n\nconst ShowCustomer = () => {\n  const [customer, setCustomer] = useState();\n  const { id } = useParams();\n\n  const fetchCustomer = useCallback(() => {\n    request.get(`/customers/${id}`).then(res => {\n      setCustomer(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [id, setCustomer])\n\n  useEffect(() => {\n    fetchCustomer();\n  }, [fetchCustomer])\n\n  return (\n    customer ?\n      <>\n        <div style={{ marginBottom: 40 }}>\n          <Descriptions\n            bordered\n            title=\"Информация о заказчике\"\n            extra={\n              <Link to={`/customers/${id}/edit`}><Button\n                type=\"primary\">Редактировать</Button></Link>}\n          >\n            <Descriptions.Item label=\"Название организации\">{customer.organizationName}</Descriptions.Item>\n            <Descriptions.Item label=\"Email\">{customer.email}</Descriptions.Item>\n            <Descriptions.Item label=\"Адрес\">{customer.address}</Descriptions.Item>\n            <Descriptions.Item label=\"Нобер банковского счёта\">{customer.bankAccountNumber}</Descriptions.Item>\n            <Descriptions.Item label=\"Банк\">{customer.bankName}</Descriptions.Item>\n            <Descriptions.Item label=\"УНП\">{customer.payerAccountNumber}</Descriptions.Item>\n          </Descriptions>\n        </div>\n        <h2>Заказы</h2>\n        <OrdersList orders={customer.orders} showCustomer={false} loading={false} fetchOrders={fetchCustomer} />\n      </>\n      : <Spinner size=\"large\"/>\n  )\n}\n\nexport default ShowCustomer;","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  notification\n} from 'antd';\nimport request from \"../../../../../utils/request\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 16,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst CustomerForm = ({ customer = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const isEdit = !!(customer.id);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    (isEdit ? request.put(`/customers/${customer.id}`, values) : request.post(\"/customers\", values))\n      .then(\n        (response) => {\n          notification.success({\n            message: isEdit ?\n              `Данные заказчика ${response.data.organizationName} были успешно обновлены` :\n              `Добавление заказчика ${response.data.organizationName} прошла успешно`\n          })\n          if (onSuccess) {\n            onSuccess(response.data);\n          }\n        },\n        () => {\n          notification.error({ message: \"Не удалось обновить данные заказчика\" });\n        }\n      ).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"customer\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          email: customer.email,\n          organizationName: customer.organizationName,\n          address: customer.address,\n          bankAccountNumber: customer.bankAccountNumber,\n          bankName: customer.bankName,\n          payerAccountNumber: customer.payerAccountNumber,\n        } : {}}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"Email\"\n          rules={[\n            {\n              type: 'email',\n              message: 'Неправильный E-mail',\n            },\n            {\n              required: true,\n              message: 'Ведите E-mail',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"organizationName\"\n          label=\"Название организации\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите название организации',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          label=\"Юридический адрес\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите юридический адрес',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"bankAccountNumber\"\n          label=\"Номер банковского счёта\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите номер банковского счёта',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"bankName\"\n          label=\"Название банка\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите название банка',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"payerAccountNumber\"\n          label=\"УНП\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите УНП (9 цифр)',\n              // whitespace: true,\n              // len: 9\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default CustomerForm;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport CustomerForm from \"../form/Form\";\n\nconst EditCustomer = () => {\n  const [customer, setCustomer] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    request.get(`/customers/${id}`).then(res => {\n      setCustomer(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [id])\n\n  return (\n    customer ?\n      <CustomerForm\n        customer={customer}\n        onSuccess={({ id }) => {\n          history.push(`/customers/${id}`);\n        }}\n      /> : <Spinner size=\"large\" />\n  )\n}\n\nexport default EditCustomer;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomerForm from \"../form/Form\";\n\nconst CreateCustomer = () => {\n  const history = useHistory();\n\n  return (\n    <CustomerForm onSuccess={({ id }) => {\n      history.push(`/customers/${id}`);\n    }}/>\n  )\n}\n\nexport default CreateCustomer;","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { Table, Space, Button, notification } from 'antd';\nimport { Link } from 'react-router-dom';\nimport request from \"../../../../utils/request\";\nimport DeleteAction from \"../../../../components/delete-action/DeleteAction\";\n\nconst Products = () => {\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n\n  const fetchProducts = useCallback(() => {\n    setLoading(true);\n    request.get(\"/products\").then(res => {\n      setProducts(res.data);\n    }).catch(() => {\n      notification.error({ message: \"Не удалось загрузить товары\" })\n    }).finally(() => {\n      setLoading(false);\n    })\n  }, [setLoading, setProducts])\n\n  const columns = useMemo(() => [\n    {\n      title: 'Наименование',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Описание',\n      dataIndex: 'description',\n    },\n    {\n      title: '',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <DeleteAction\n            url={`/products/${record.id}`}\n            onSuccess={fetchProducts}\n            successMessage=\"Товар был успешно удалён\"\n            errorMessage=\"Не удалось удалить товар\"\n          />\n          <Link to={`/products/${record.id}/edit`}><Button\n            size=\"small\">Редактировать</Button></Link>\n        </Space>\n      ),\n    },\n  ], [fetchProducts]);\n\n  useEffect(() => {\n    fetchProducts();\n  }, [fetchProducts])\n\n  return (\n    <>\n      <div className=\"table-controls\">\n        <Link to=\"/products/new\">\n          <Button className=\"green-button\" type=\"primary\">Добавить</Button>\n        </Link>\n      </div>\n      <Table columns={columns} dataSource={products} rowKey=\"id\" loading={loading} pagination={false} />\n    </>\n  )\n};\n\nexport default Products","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  notification\n} from 'antd';\nimport request from \"../../../../../utils/request\";\nimport { formItemLayout, tailFormItemLayout } from \"../../../../../config/formLayout\";\n\nconst ProductForm = ({ product = {}, onSuccess }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const isEdit = !!(product.id);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    (isEdit ? request.put(`/products/${product.id}`, values) : request.post(\"/products\", values))\n      .then(\n        (response) => {\n          notification.success({\n            message: isEdit ?\n              `Данные товара ${response.data.name} были успешно обновлены` :\n              `Добавление товара ${response.data.name} прошла успешно`\n          })\n          if (onSuccess) {\n            onSuccess(response.data);\n          }\n        },\n        () => {\n          notification.error({ message: \"Не удалось обновить данные товара\" });\n        }\n      ).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"product\"\n        onFinish={onFinish}\n        initialValues={isEdit ? {\n          name: product.name,\n          description: product.description,\n        } : {}}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Наименование\"\n          rules={[\n            {\n              required: true,\n              message: 'Ведите наименование',\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label=\"Описание\"\n        >\n          <Input.TextArea />\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {isEdit ? \"Сохранить\" : \"Создать\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ProductForm;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ProductForm from \"../form/Form\";\n\nconst CreateProduct = () => {\n  const history = useHistory();\n\n  return (\n    <ProductForm onSuccess={() => {\n      history.push(\"/products\");\n    }}/>\n  )\n}\n\nexport default CreateProduct;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport request from \"../../../../../utils/request\";\nimport Spinner from \"../../../../../components/spinner/Spinner\";\nimport ProductForm from \"../form/Form\";\n\nconst EditProduct = () => {\n  const [product, setProduct] = useState();\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    request.get(`/products/${id}`).then(res => {\n      setProduct(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }, [id])\n\n  return (\n    product ?\n      <ProductForm\n        product={product}\n        onSuccess={() => {\n          history.push(\"/products\");\n        }}\n      /> : <Spinner size=\"large\" />\n  )\n}\n\nexport default EditProduct;","import React, { useMemo } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { TeamOutlined, MailOutlined, UserOutlined, IdcardFilled, DatabaseOutlined } from '@ant-design/icons';\nimport {\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport Header from './components/header/Header';\nimport Orders from './components/orders/Orders';\nimport Users from './components/users/Users';\nimport Profile from \"./components/profile/Profile\";\nimport EditUser from \"./components/users/edit/Edit\";\nimport CreateUser from \"./components/users/create/Create\";\nimport CreateOrder from \"./components/orders/create/Create\";\nimport EditOrder from \"./components/orders/edit/Edit\";\nimport ShowOrder from \"./components/orders/show/Show\";\nimport Customers from \"./components/customers/Customers\";\nimport ShowCustomer from \"./components/customers/show/Show\";\nimport EditCustomer from \"./components/customers/edit/Edit\";\nimport CreateCustomer from \"./components/customers/create/Create\";\nimport Products from \"./components/products/Products\";\nimport CreateProduct from \"./components/products/create/Create\";\nimport EditProduct from \"./components/products/edit/Edit\";\n\nconst { Content, Sider } = Layout;\n\nconst routes = [\n  { path: \"/\", component: <Orders/> },\n  { path: \"/orders/new\", component: <CreateOrder/> },\n  { path: \"/orders/:id/edit\", component: <EditOrder/> },\n  { path: \"/orders/:id\", component: <ShowOrder/> },\n  { path: \"/users\", component: <Users/> },\n  { path: \"/users/new\", component: <CreateUser/> },\n  { path: \"/users/:id\", component: <EditUser/> },\n  { path: \"/customers\", component: <Customers/> },\n  { path: \"/customers/new\", component: <CreateCustomer/> },\n  { path: \"/customers/:id\", component: <ShowCustomer/> },\n  { path: \"/customers/:id/edit\", component: <EditCustomer/> },\n  { path: \"/products\", component: <Products/> },\n  { path: \"/products/new\", component: <CreateProduct/> },\n  { path: \"/products/:id/edit\", component: <EditProduct/> },\n  { path: \"/profile\", component: <Profile/> },\n]\n\nconst Admin = () => {\n  const [, , isAdmin] = useAuth();\n  const location = useLocation();\n\n  const selectedMenuItem = useMemo(() => {\n    if (location.pathname.match(\"/users\")) {\n      return \"users\"\n    }\n    if (location.pathname.match(\"/customers\")) {\n      return \"customers\"\n    }\n    if (location.pathname.match(\"/products\")) {\n      return \"products\"\n    }\n    if (location.pathname.match(\"/profile\")) {\n      return \"profile\"\n    }\n    return \"orders\";\n  }, [location.pathname]);\n\n  return (\n    <Layout>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n      >\n        <div className=\"logo\">Axiom Admin</div>\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenuItem]}>\n          <Menu.Item key=\"orders\" icon={<MailOutlined/>}>\n            <Link to=\"/\">Заказы</Link>\n          </Menu.Item>\n          {isAdmin &&\n          <Menu.Item key=\"users\" icon={<TeamOutlined/>}>\n            <Link to=\"/users\">Пользователи</Link>\n          </Menu.Item>\n          }\n          <Menu.Item key=\"customers\" icon={<IdcardFilled/>}>\n            <Link to=\"/customers\">Заказчики</Link>\n          </Menu.Item>\n          <Menu.Item key=\"products\" icon={<DatabaseOutlined/>}>\n            <Link to=\"/products\">Товары</Link>\n          </Menu.Item>\n          <Menu.Item key=\"profile\" icon={<UserOutlined/>}>\n            <Link to=\"/profile\">Профиль</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header/>\n        <Content style={{ margin: '24px 16px 0' }}>\n          <div className=\"site-layout-background\" style={{ padding: 24 }}>\n            {isAdmin ?\n              <Switch>\n                {routes.map(route => (\n                  <Route key={route.path} exact path={route.path}>\n                    {route.component}\n                  </Route>\n                ))}\n              </Switch>\n              :\n              <Switch>\n                {routes.filter(route => !route.path.match(\"/users\")).map(route => (\n                  <Route key={route.path} exact path={route.path}>\n                    {route.component}\n                  </Route>\n                ))}\n              </Switch>\n            }\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Admin;","import React, { useState } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './Login.css';\nimport request from \"../../utils/request\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst Login = () => {\n  const [, updateUser] = useAuth();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = values => {\n    setLoading(true);\n    request\n      .post(\"/auth/signin\", {\n        username: values.username,\n        password: values.password,\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"token\", response.data.accessToken);\n        }\n        updateUser(response.data);\n      }).catch(() => {\n      notification.error({ message: \"Не удалось выполнить вход\" })\n    }).finally(() => {\n      setLoading(false);\n    })\n  };\n\n  return (\n    <div className=\"login-form-wrapper\">\n      <div className=\"login-form-container\">\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[{ required: true, message: 'Введите логин' }]}\n          >\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Логин\"/>\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Введите пароль' }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n              type=\"password\"\n              placeholder=\"Пароль\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Войти\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login","import React, { useState } from 'react';\nimport {\n  Form,\n  Button,\n  notification, Input\n} from 'antd';\nimport request from \"../../utils/request\";\nimport Products from \"../admin/components/orders/form/components/products/Products\";\nimport OrderFields from \"../admin/components/orders/form/components/order-fields/OrderFields\";\nimport CustomerFields from \"../admin/components/orders/form/components/customer-fields/CustomerFields\";\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 10,\n    },\n  },\n};\n\nconst OrderForm = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const onFinish = (values) => {\n    const errors = [];\n\n    if (!values.products || !values.products.length) {\n      errors.push(\"Не выбраны товары\")\n    }\n\n    if (errors.length) {\n      notification.error({ message: errors.join(\". \") })\n    } else {\n      setLoading(true);\n\n      request.post(\"/orders\", values)\n        .then(\n          () => {\n            notification.success({\n              message: \"Заказ отправлен\"\n            })\n            setSuccess(true);\n          },\n          () => {\n            notification.error({ message: \"Не удалось отправить заказ\" });\n          }\n        ).finally(() => {\n        setLoading(false);\n      })\n    }\n  };\n\n  return success ?\n    <div style={{ maxWidth: 750, margin: \"50px auto 30px auto\" }}>\n      <h1>Ваш заказ отправлен!</h1>\n      <h3>Мы свяжемся с вами по возможности. По причине повышенного спроса, связанного с реализацией программы по переходу на использование биометрических документов, оперативно реагировать на все обращения не представляется возможным. Приносим извинения за задержки.</h3>\n    </div> :\n    <>\n      <div style={{ maxWidth: 750, margin: \"50px auto 30px auto\" }}>\n        <h3>Пожалуйста, выберите интересующие вас товары, укажите их количество, заполните все поля помеченные * и\n          нажмите кнопку <b>Отправить</b></h3>\n      </div>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"order\"\n        onFinish={onFinish}\n        initialValues={{\n          deliveryMethodId: 1,\n          orderStatusId: 1,\n          products: [{ id: null, quantity: 1 }]\n        }}\n        scrollToFirstError\n        style={{ maxWidth: 750, margin: \"0 auto\", paddingBottom: 30 }}\n      >\n        <Products form={form}/>\n        <OrderFields form={form} validatePhone />\n        <CustomerFields/>\n        <Form.Item\n          name=\"notes\"\n          label=\"Дополнительные условия и пожелания\"\n        >\n          <Input.TextArea/>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\" loading={loading}>\n            Отправить\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n};\n\nexport default OrderForm;","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Admin from \"./pages/admin/Admin\";\nimport './App.css';\nimport Login from \"./pages/login/Login\";\nimport { selectUser, setUser } from \"./config/authSlice\";\nimport moment from \"moment\";\nimport 'moment/locale/ru';\nimport OrderForm from \"./pages/order-form/OrderForm\";\n\nmoment.locale('ru');\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (userFromStorage) {\n      dispatch(setUser(userFromStorage));\n    }\n  }, [dispatch]);\n\n  return user ?\n    <Admin/>\n    :\n    <Switch>\n      <Route exact path=\"/\">\n        <Login/>\n      </Route>\n      <Route exact path=\"/order_form\">\n        <OrderForm/>\n      </Route>\n    </Switch>;\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './authSlice';\n\nexport default configureStore({\n  reducer: {\n    auth: authReducer,\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './config/store';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}